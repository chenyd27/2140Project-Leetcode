{"ast":null,"code":"export default {\n  data() {\n    return {\n      // 查询信息实体\n      queryInfo: {\n        query: \"\",\n        pageNum: 1,\n        pageSize: 5\n      },\n      // userList 内容\n      userList: [],\n      questionList: [],\n      // questionList 内容\n      // 查询数目\n      count: 0\n    };\n  },\n  created() {\n    this.getQuestionList();\n  },\n  methods: {\n    // 获取所有问题\n    async getQuestionList() {\n      const {\n        data: res\n      } = await this.$http.get(\"allquestion\", {\n        params: this.queryInfo\n      });\n      this.questionList = res.questionList; // 问题列表数据封装\n      this.count = res.count; // 总问题数目\n    },\n\n    // 最大数目\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize;\n      this.getQuestionList(); // 获取每页的userlist\n    },\n\n    // pageNum 触发\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage;\n      this.getQuestionList();\n    },\n    // 修改用户状态\n    async userStateChange(userInfo) {\n      var formData = new FormData();\n      formData.append('id', userInfo.id);\n      formData.append('state', userInfo.state);\n      const {\n        data: res\n      } = await this.$http.put('/userstate', formData);\n      if (res != \"success\") {\n        userInfo.state = !userInfo.state;\n        return this.$message.error(\"fail\");\n      }\n      this.$message.success(\"success\");\n    },\n    classObje(difficulty) {\n      if (difficulty == \"Easy\") {\n        return {\n          'color': 'green'\n        };\n      } else if (difficulty == \"Medium\") {\n        return {\n          'color': 'orange'\n        };\n      } else if (difficulty == \"Hard\") {\n        return {\n          'color': 'red'\n        };\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA8EA;EACAA;IACA;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC;MACAC;MAAA;MACA;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACA;MACA;QAAAT;MAAA;QAAAU;MAAA;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;IACA;IACA;MACA;MACAC;MACAA;MACA;QAAAb;MAAA;MACA;QACAc;QACA;MACA;MACA;IACA;IACAC;MACA;QACA;UAAA;QAAA;MACA;QACA;UAAA;QAAA;MACA;QACA;UAAA;QAAA;MACA;IACA;EACA;AACA","names":["data","queryInfo","query","pageNum","pageSize","userList","questionList","count","created","methods","params","handleSizeChange","handleCurrentChange","formData","userInfo","classObje"],"sourceRoot":"src/components/admin","sources":["QuestionList.vue"],"sourcesContent":["<template>\n    <div> \n        <!--用户列表主体部分-->\n        <el-card>\n            <!--搜索区域-->\n            <el-row :gutter=\"100\">\n                <el-col :span=\"8\">\n                    <!--添加搜索-->\n                    <el-input placeholder=\"please input the search query\" v-model=\"queryInfo.query\" clearable @clear=\"getQuestionList\">\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getQuestionList\"></el-button>\n                    </el-input>\n                </el-col>\n            </el-row>\n            \n            <el-divider></el-divider>\n            <el-menu default-active=\"2\" class=\"el-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\">\n                <el-submenu :index=\"item.id\" v-for=\"item in questionList\" :key=\"item.id\" class=\"showResult\">\n                    <template slot=\"title\">\n                        <el-row :gutter=\"20\">\n                            <el-col :span=\"1\"><div class=\"grid-content bg-purple\">{{item.id}}</div></el-col>\n                            <el-col :span=\"8\"><el-link :href=\"item.url\" target=\"_blank\">默认链接</el-link></div></el-col>\n                            <el-col :span=\"8\"><div class=\"grid-content bg-purple\" :style=\"classObje(item.difficulty)\">{{item.difficulty}}</div></el-col>\n                            <el-col :span=\"6\"><div class=\"grid-content bg-purple\">X</div></el-col>\n                            <el-link :href=\"item.url\" target=\"_blank\">默认链接</el-link>\n                        </el-row>\n                    </template>\n                    <el-menu-item-group>\n                    <template slot=\"title\">\n                        <el-menu-item index=\"1-1\">选项1</el-menu-item>\n                    </template>\n                    </el-menu-item-group>\n                </el-submenu>\n            </el-menu>\n            <el-table :data=\"questionList\" border stripe> \n                <!--索引列-->\n                <el-table-column type=\"index\"></el-table-column>\n                <el-table-column label=\"Name\" prop=\"name\"></el-table-column>\n                <el-table-column label=\"Difficulty\" prop=\"difficulty\">\n                    <template slot-scope=\"scope\">\n                        <div :style=\"classObje(scope.row.difficulty)\">\n                            {{ scope.row.difficulty }}\n                        </div>\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"Url\" prop=\"url\">\n                    <template slot-scope=\"scope\">\n                        <a :href=\"scope.row.url\" target=\"_blank\" class=\"buttonText\">点击跳转</a>\n                    </template>          \n                </el-table-column>\n                <!--作用域插槽-->\n                <!--\n                <el-table-column label=\"State\" prop=\"state\">\n                    <template slot-scope=\"scope\">\n                        <el-switch v-model=\"scope.row.state\" @change=\"userStateChange(scope.row)\"></el-switch>\n                    </template>\n                </el-table-column>\n                -->\n            </el-table>\n            <!--分页组件-->\n            <div>\n                <!--size-change 每页最大变化数\n                    current-change 当前最大变化数\n                    layout 功能组件\n                -->\n                <el-pagination\n                    @size-change=\"handleSizeChange\"\n                    @current-change=\"handleCurrentChange\"\n                    :current-page=\"queryInfo.pageNum\"\n                    :page-sizes=\"[1, 2, 5, 10]\"\n                    :page-size=\"queryInfo.pageSize\"\n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"count\">\n                </el-pagination>\n            </div>\n        </el-card>\n    </div>\n</template>\n<script>\nexport default {\n    data(){\n        return{\n            // 查询信息实体\n            queryInfo:{\n                query:\"\",\n                pageNum:1,\n                pageSize:5,\n            },\n            // userList 内容\n            userList:[],\n            questionList:[], // questionList 内容\n            // 查询数目\n            count:0,\n        }\n    },\n    created(){\n        this.getQuestionList();\n    },\n    methods:{\n        // 获取所有问题\n        async getQuestionList(){\n            const {data:res} = await this.$http.get(\"allquestion\",{params:this.queryInfo});\n            this.questionList = res.questionList; // 问题列表数据封装\n            this.count = res.count; // 总问题数目\n        },\n        // 最大数目\n        handleSizeChange(newSize){\n            this.queryInfo.pageSize = newSize;\n            this.getQuestionList(); // 获取每页的userlist\n        },\n        // pageNum 触发\n        handleCurrentChange(newPage){\n            this.queryInfo.pageNum = newPage;\n            this.getQuestionList();\n        },\n        // 修改用户状态\n        async userStateChange(userInfo){\n            var formData = new FormData();\n            formData.append('id',userInfo.id);\n            formData.append('state',userInfo.state);\n            const {data:res} = await this.$http.put('/userstate',formData);\n            if(res != \"success\"){\n                userInfo.state = !userInfo.state;\n                return this.$message.error(\"fail\");\n            }\n            this.$message.success(\"success\");\n        },\n        classObje(difficulty) {            \n            if (difficulty == \"Easy\"){\n            return {'color':'green'}  \n            } else if (difficulty == \"Medium\"){\n            return {'color':'orange',}\n            } else if (difficulty == \"Hard\"){\n            return {'color':'red',}\n            }      \n        }\n    },\n}\n</script>\n<style lang=\"less\" scoped>\n.el-breadcrumb{\n    margin-bottom: 15px;\n    font-size:15px;\n}\n.showResult{\n    border: 0.1px solid rgb(240,240,240);\n}\n.title{\n    top:10px;\n}\n.el-row {\n    margin-bottom: 20px;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n  .el-col {\n    border-radius: 4px;\n  }\n  .grid-content {\n    border-radius: 4px;\n    min-height: 36px;\n  }\n  .row-bg {\n    padding: 10px 0;\n    background-color: #f9fafc;\n  }\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}