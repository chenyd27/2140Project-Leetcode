{"ast":null,"code":"export default {\n  data() {\n    return {\n      // 查询信息实体\n      queryInfo: {\n        query: \"\",\n        pageNum: 1,\n        pageSize: 5\n      },\n      // userList 内容\n      userList: [],\n      // 查询数目\n      count: 0,\n      addDialogVisible: false,\n      // 对话框显示隐藏状态\n      addForm: {\n        // 添加表单\n        username: '',\n        password: '',\n        email: ''\n      },\n      // 表单验证\n      addFormRules: {\n        username: [{\n          required: true,\n          message: 'please input username',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'please input password',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'please input email',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 50,\n          message: '长度在 2 到 20 个字符',\n          trigger: 'blur'\n        }]\n      },\n      // 添加修改用户的信息\n      editForm: {},\n      // 显示隐藏修改用户栏\n      editDialogVisable: false,\n      // 修改的表单验证\n      editFormRules: {\n        username: [{\n          required: true,\n          message: 'please input username',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'please input password',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'please input email',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 50,\n          message: '长度在 2 到 20 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getUserList();\n  },\n  methods: {\n    // 获取所有用户\n    async getUserList() {\n      const {\n        data: res\n      } = await this.$http.get(\"alluser\", {\n        params: this.queryInfo\n      });\n      this.userList = res.userList; // 用户列表数据封装\n      this.count = res.count; // 总用户数目\n    },\n\n    // 最大数目\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize;\n      this.getUserList(); // 获取每页的userlist\n    },\n\n    // pageNum 触发\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage;\n      this.getUserList();\n    },\n    // 修改用户状态\n    async userStateChange(userInfo) {\n      var formData = new FormData();\n      formData.append('id', userInfo.id);\n      formData.append('state', userInfo.state);\n      const {\n        data: res\n      } = await this.$http.put('/userstate', formData);\n      if (res != \"success\") {\n        userInfo.state = !userInfo.state;\n        return this.$message.error(\"fail\");\n      }\n      this.$message.success(\"success\");\n    },\n    // 表单清空操作\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    // 添加用户方法\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return;\n        const {\n          data: res\n        } = await this.$http.post(\"adduser\", this.addForm);\n        if (res != \"success\") {\n          return this.$message.error(\"fail\");\n        }\n        this.addDialogVisible = false;\n        this.getUserList(); // 刷新用户\n        return this.$message.success(\"success\");\n      });\n    },\n    // 删除事件,根据主键\n    async deleteUser(id) {\n      const confirmResult = await this.$confirm('此操作会永久删除用户，是否继续', 'tips', {\n        confirmButtonText: 'submit',\n        cancelButtonText: 'cancel',\n        type: 'warning'\n      }).catch(err => err); // 永久删除用户\n      if (confirmResult != 'confirm') {\n        return this.$message.Info(\"已取消删除\");\n      }\n      const {\n        data: res\n      } = await this.$http.delete(\"deleteuser?id=\" + id);\n      if (res != \"success\") return this.$message.error(\"fail\");\n      this.queryInfo.pageNum = 1;\n      this.$message.success(\"success\");\n      this.getUserList(); // 刷新列表\n    },\n\n    // 显示和隐藏对话框\n    async showEditDialog(id) {\n      const {\n        data: res\n      } = await this.$http.get(\"getuser?id=\" + id);\n      this.editForm = res.user; // 查询出来的用户信息\n      this.editDialogVisable = true;\n    },\n    // 关闭窗口\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields(); // 重置信息\n    },\n\n    // 确认修改\n    editUser() {\n      // 表单验证\n      this.$refs.editFormRef.validate(async valid => {\n        if (!valid) return;\n        // 发起修改请求\n        const {\n          data: res\n        } = await this.$http.put(\"update\", this.editForm);\n        if (res != \"success\") return this.$message.error(\"fail\");\n        this.$message.success(\"success\");\n        this.editDialogVisable = false;\n        this.getUserList();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAoGA;EACAA;IACA;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC;MACA;MACAC;MACAC;MAAA;MACAC;QAAA;QACAC;QACAC;QACAC;MACA;MACA;MACAC;QACAH,WACA;UAAAI;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAL,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAJ,QACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;MACA;MACAG;MACA;MACAC;MACA;MACAC;QACAX,WACA;UAAAI;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAL,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAJ,QACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;IAEA;EACA;EACAM;IACA;EACA;EACAC;IACA;IACA;MACA;QAAAtB;MAAA;QAAAuB;MAAA;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;IACA;IACA;MACA;MACAC;MACAA;MACA;QAAA1B;MAAA;MACA;QACA2B;QACA;MACA;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;QACA;QACA;UAAA7B;QAAA;QACA;UACA;QACA;QACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;QACA8B;QACAC;QACAC;MACA;MACA;QACA;MACA;MACA;QAAAhC;MAAA;MACA;MACA;MACA;MACA;IACA;;IACA;IACA;MACA;QAAAA;MAAA;MACA;MACA;IAEA;IACA;IACAiC;MACA;IACA;;IACA;IACAC;MACA;MACA;QACA;QACA;QACA;UAAAlC;QAAA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["data","queryInfo","query","pageNum","pageSize","userList","count","addDialogVisible","addForm","username","password","email","addFormRules","required","message","trigger","min","max","editForm","editDialogVisable","editFormRules","created","methods","params","handleSizeChange","handleCurrentChange","formData","userInfo","addDialogClosed","addUser","confirmButtonText","cancelButtonText","type","editDialogClosed","editUser"],"sourceRoot":"src/components/admin","sources":["UserList.vue"],"sourcesContent":["<template>\n    <div> \n        <!--用户列表主体部分-->\n        <el-card>\n            <!--搜索区域-->\n            <el-row :gutter=\"100\">\n                <el-col :span = \"20\">\n                    <!--添加搜索-->\n                    <el-input placeholder=\"please input the search query\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList\">\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\n                    </el-input>\n                </el-col>\n            </el-row>\n            <!--用户列表 border边框 stripe隔行变色-->\n            <el-table :data=\"userList\" border stripe> \n                <!--索引列-->\n                <el-table-column type=\"index\"></el-table-column>\n                <el-table-column label=\"UserName\" prop=\"username\"></el-table-column>\n                <el-table-column label=\"Email\" prop=\"email\"></el-table-column>\n                <el-table-column label=\"Role\" prop=\"role\"></el-table-column>\n                <!--作用域插槽-->\n                <el-table-column label=\"State\" prop=\"state\">\n                    <template slot-scope=\"scope\">\n                        <!-- scope.row 会封存每一行的数据-->\n                        <el-switch v-model=\"scope.row.state\" @change=\"userStateChange(scope.row)\"></el-switch>\n                    </template>\n                </el-table-column>\n                <!--自定义插槽-->\n                <el-table-column label=\"Action\">\n                    <template slot-scope=\"scope\">\n                        <!--修改-->\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.id)\"></el-button>\n                        <!--删除-->\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteUser(scope.row.id)\" ></el-button>\n                        <!--权限设置-->\n                        <el-tooltip type=\"dark\" content=\"分配权限\" placement=\"top-start\" :enterable=\"false\">\n                            <!--文字提示 enterable 隐藏-->\n                            <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"></el-button>\n                        </el-tooltip>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <!--分页组件-->\n            <div>\n                <!--size-change 每页最大变化数\n                    current-change 当前最大变化数\n                    layout 功能组件\n                -->\n                <el-pagination\n                    @size-change=\"handleSizeChange\"\n                    @current-change=\"handleCurrentChange\"\n                    :current-page=\"queryInfo.pageNum\"\n                    :page-sizes=\"[1, 2, 5, 10]\"\n                    :page-size=\"queryInfo.pageSize\"\n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"count\">\n                </el-pagination>\n            </div>\n        </el-card>\n        <!--新增用户区域-->\n        <el-dialog title=\"add user\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed()\">\n            <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n                <el-form-item label=\"user\" prop=\"username\" width=\"80%\">\n                    <el-input v-model=\"addForm.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"pwd\" prop=\"password\">\n                    <el-input v-model=\"addForm.password\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"email\" prop=\"email\">\n                    <el-input v-model=\"addForm.email\"></el-input>\n                </el-form-item>\n            </el-form>\n            <!--底部按钮-->\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"addDialogVisible = false\">cancel</el-button>\n                <el-button type=\"primary\" @click=\"addUser()\">submit</el-button>\n            </span>\n        </el-dialog>\n        <!--修改页面对话框-->\n        <el-dialog title=\"update user\" :visible.sync=\"editDialogVisable\" width=\"50%\" @close=\"editDialogClosed()\">\n            <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"70px\">\n                <el-form-item label=\"user\" prop=\"username\" width=\"80%\">\n                    <el-input v-model=\"editForm.username\" :label=\"editForm.username\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"pwd\" prop=\"password\">\n                    <el-input v-model=\"editForm.password\" :label=\"editForm.password\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"email\" prop=\"email\">\n                    <el-input v-model=\"editForm.email\" :label=\"editForm.email\"></el-input>\n                </el-form-item>\n            </el-form>\n            <!--底部按钮-->\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editDialogVisable = false\">cancel</el-button>\n                <el-button type=\"primary\" @click=\"editUser()\">submit</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n<script>\nexport default {\n    data(){\n        return{\n            // 查询信息实体\n            queryInfo:{\n                query:\"\",\n                pageNum:1,\n                pageSize:5,\n            },\n            // userList 内容\n            userList:[],\n            // 查询数目\n            count:0,\n            addDialogVisible:false, // 对话框显示隐藏状态\n            addForm:{ // 添加表单\n                username:'',\n                password:'',\n                email:'',\n            },\n            // 表单验证\n            addFormRules: {\n                username: [\n                    { required: true, message: 'please input username', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: 'please input password', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                email: [\n                    { required: true, message: 'please input email', trigger: 'blur' },\n                    { min: 3, max: 50, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n                ],\n            },\n            // 添加修改用户的信息\n            editForm:{},\n            // 显示隐藏修改用户栏\n            editDialogVisable:false,\n            // 修改的表单验证\n            editFormRules: {\n                username: [\n                    { required: true, message: 'please input username', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: 'please input password', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                email: [\n                    { required: true, message: 'please input email', trigger: 'blur' },\n                    { min: 3, max: 50, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n                ],\n            },\n\n        }\n    },\n    created(){\n        this.getUserList();\n    },\n    methods:{\n        // 获取所有用户\n        async getUserList(){\n            const {data:res} = await this.$http.get(\"alluser\",{params:this.queryInfo});\n            this.userList = res.userList; // 用户列表数据封装\n            this.count = res.count; // 总用户数目\n        },\n        // 最大数目\n        handleSizeChange(newSize){\n            this.queryInfo.pageSize = newSize;\n            this.getUserList(); // 获取每页的userlist\n        },\n        // pageNum 触发\n        handleCurrentChange(newPage){\n            this.queryInfo.pageNum = newPage;\n            this.getUserList();\n        },\n        // 修改用户状态\n        async userStateChange(userInfo){\n            var formData = new FormData();\n            formData.append('id',userInfo.id);\n            formData.append('state',userInfo.state);\n            const {data:res} = await this.$http.put('/userstate',formData);\n            if(res != \"success\"){\n                userInfo.state = !userInfo.state;\n                return this.$message.error(\"fail\");\n            }\n            this.$message.success(\"success\");\n        },\n        // 表单清空操作\n        addDialogClosed(){\n            this.$refs.addFormRef.resetFields();\n        },\n        // 添加用户方法\n        addUser(){\n            this.$refs.addFormRef.validate(async valid=>{\n                if(!valid) return;\n                const {data:res} = await this.$http.post(\"adduser\",this.addForm);\n                if(res != \"success\"){\n                    return this.$message.error(\"fail\");\n                }\n                this.addDialogVisible = false;\n                this.getUserList(); // 刷新用户\n                return this.$message.success(\"success\");\n            });\n        },\n        // 删除事件,根据主键\n        async deleteUser(id){\n            const confirmResult = await this.$confirm('此操作会永久删除用户，是否继续','tips',{\n                confirmButtonText:'submit',\n                cancelButtonText:'cancel',\n                type:'warning'\n            }).catch(err => err); // 永久删除用户\n            if(confirmResult != 'confirm'){\n                return this.$message.Info(\"已取消删除\");\n            }\n            const {data:res} = await this.$http.delete(\"deleteuser?id=\" + id);\n            if(res != \"success\") return this.$message.error(\"fail\");\n            this.queryInfo.pageNum = 1;\n            this.$message.success(\"success\");\n            this.getUserList(); // 刷新列表\n        },\n        // 显示和隐藏对话框\n        async showEditDialog(id){\n            const {data:res} = await this.$http.get(\"getuser?id=\" + id);\n            this.editForm = res.user; // 查询出来的用户信息\n            this.editDialogVisable = true;\n\n        },\n        // 关闭窗口\n        editDialogClosed(){\n            this.$refs.editFormRef.resetFields(); // 重置信息\n        },\n        // 确认修改\n        editUser(){\n            // 表单验证\n            this.$refs.editFormRef.validate(async valid=>{\n                if(!valid) return;\n                // 发起修改请求\n                const {data:res} = await this.$http.put(\"update\",this.editForm);\n                if(res != \"success\") return this.$message.error(\"fail\");\n                this.$message.success(\"success\");\n                this.editDialogVisable = false;\n                this.getUserList();\n            })\n        },\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.el-breadcrumb{\n    margin-bottom: 15px;\n    font-size:15px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}