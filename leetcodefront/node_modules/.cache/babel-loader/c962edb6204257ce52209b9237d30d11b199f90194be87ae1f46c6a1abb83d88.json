{"ast":null,"code":"export default {\n  data() {\n    return {\n      // 查询信息实体\n      queryInfo: {\n        query: \"\",\n        pageNum: 1,\n        pageSize: 5\n      },\n      // userList 内容\n      userList: [],\n      questionList: [],\n      // questionList 内容\n      // 查询数目\n      count: 0,\n      addDialogVisible: false,\n      // 对话框显示隐藏状态\n      addForm: {\n        // 添加表单\n        username: '',\n        password: '',\n        email: ''\n      },\n      // 表单验证\n      addFormRules: {\n        username: [{\n          required: true,\n          message: 'please input username',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'please input password',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'please input email',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 50,\n          message: '长度在 2 到 20 个字符',\n          trigger: 'blur'\n        }]\n      },\n      // 添加修改用户的信息\n      editForm: {},\n      // 显示隐藏修改用户栏\n      editDialogVisable: false,\n      // 修改的表单验证\n      editFormRules: {\n        username: [{\n          required: true,\n          message: 'please input username',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: 'please input password',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 12,\n          message: '长度在 2 到 12 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'please input email',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 50,\n          message: '长度在 2 到 20 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.getUserList();\n    this.getQuestionList();\n  },\n  methods: {\n    // 获取所有用户\n    async getUserList() {\n      const {\n        data: res\n      } = await this.$http.get(\"alluser\", {\n        params: this.queryInfo\n      });\n      this.userList = res.userList; // 用户列表数据封装\n      this.count = res.count; // 总用户数目\n    },\n\n    // 获取所有问题\n    async getQuestionList() {\n      const {\n        data: res\n      } = await this.$http.get(\"allquestion\", {\n        params: this.queryInfo\n      });\n      this.questionList = res.questionList; // 问题列表数据封装\n      this.count = res.count; // 总问题数目\n    },\n\n    // 最大数目\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize;\n      this.getUserList(); // 获取每页的userlist\n    },\n\n    // pageNum 触发\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage;\n      this.getUserList();\n    },\n    // 修改用户状态\n    async userStateChange(userInfo) {\n      var formData = new FormData();\n      formData.append('id', userInfo.id);\n      formData.append('state', userInfo.state);\n      const {\n        data: res\n      } = await this.$http.put('/userstate', formData);\n      if (res != \"success\") {\n        userInfo.state = !userInfo.state;\n        return this.$message.error(\"fail\");\n      }\n      this.$message.success(\"success\");\n    }\n  }\n};","map":{"version":3,"mappings":"AAgDA;EACAA;IACA;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACA;MACAC;MACAC;MAAA;MACA;MACAC;MACAC;MAAA;MACAC;QAAA;QACAC;QACAC;QACAC;MACA;MACA;MACAC;QACAH,WACA;UAAAI;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAL,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAJ,QACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;MACA;MACAG;MACA;MACAC;MACA;MACAC;QACAX,WACA;UAAAI;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAL,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAJ,QACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;IAEA;EACA;EACAM;IACA;IACA;EACA;EACAC;IACA;IACA;MACA;QAAAvB;MAAA;QAAAwB;MAAA;MACA;MACA;IACA;;IACA;IACA;MACA;QAAAxB;MAAA;QAAAwB;MAAA;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;;IACA;IACAC;MACA;MACA;IACA;IACA;IACA;MACA;MACAC;MACAA;MACA;QAAA3B;MAAA;MACA;QACA4B;QACA;MACA;MACA;IACA;EACA;AACA","names":["data","queryInfo","query","pageNum","pageSize","userList","questionList","count","addDialogVisible","addForm","username","password","email","addFormRules","required","message","trigger","min","max","editForm","editDialogVisable","editFormRules","created","methods","params","handleSizeChange","handleCurrentChange","formData","userInfo"],"sourceRoot":"src/components/admin","sources":["UserList.vue"],"sourcesContent":["<template>\n    <div> \n        <!--用户列表主体部分-->\n        <el-card>\n            <!--搜索区域-->\n            <el-row :gutter=\"100\">\n                <el-col :span = \"20\">\n                    <!--添加搜索-->\n                    <el-input placeholder=\"please input the search query\" v-model=\"queryInfo.query\" clearable @clear=\"getQuestionList\">\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getQuestionList\"></el-button>\n                    </el-input>\n                </el-col>\n            </el-row>\n            <!--用户列表 border边框 stripe隔行变色-->\n            <el-table :data=\"userList\" border stripe> \n                <!--索引列-->\n                <el-table-column type=\"index\"></el-table-column>\n                <el-table-column label=\"Name\" prop=\"name\"></el-table-column>\n                <el-table-column label=\"Difficulty\" prop=\"difficulty\"></el-table-column>\n                <el-table-column label=\"Url\" prop=\"url\"></el-table-column>\n                <!--作用域插槽-->\n                <el-table-column label=\"State\" prop=\"state\">\n                    <template slot-scope=\"scope\">\n                        <!-- scope.row 会封存每一行的数据-->\n                        <el-switch v-model=\"scope.row.state\" @change=\"userStateChange(scope.row)\"></el-switch>\n                    </template>\n                </el-table-column>\n            </el-table>\n            <!--分页组件-->\n            <div>\n                <!--size-change 每页最大变化数\n                    current-change 当前最大变化数\n                    layout 功能组件\n                -->\n                <el-pagination\n                    @size-change=\"handleSizeChange\"\n                    @current-change=\"handleCurrentChange\"\n                    :current-page=\"queryInfo.pageNum\"\n                    :page-sizes=\"[1, 2, 5, 10]\"\n                    :page-size=\"queryInfo.pageSize\"\n                    layout=\"total, sizes, prev, pager, next, jumper\"\n                    :total=\"count\">\n                </el-pagination>\n            </div>\n        </el-card>\n    </div>\n</template>\n<script>\nexport default {\n    data(){\n        return{\n            // 查询信息实体\n            queryInfo:{\n                query:\"\",\n                pageNum:1,\n                pageSize:5,\n            },\n            // userList 内容\n            userList:[],\n            questionList:[], // questionList 内容\n            // 查询数目\n            count:0,\n            addDialogVisible:false, // 对话框显示隐藏状态\n            addForm:{ // 添加表单\n                username:'',\n                password:'',\n                email:'',\n            },\n            // 表单验证\n            addFormRules: {\n                username: [\n                    { required: true, message: 'please input username', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: 'please input password', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                email: [\n                    { required: true, message: 'please input email', trigger: 'blur' },\n                    { min: 3, max: 50, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n                ],\n            },\n            // 添加修改用户的信息\n            editForm:{},\n            // 显示隐藏修改用户栏\n            editDialogVisable:false,\n            // 修改的表单验证\n            editFormRules: {\n                username: [\n                    { required: true, message: 'please input username', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                password: [\n                    { required: true, message: 'please input password', trigger: 'blur' },\n                    { min: 2, max: 12, message: '长度在 2 到 12 个字符', trigger: 'blur' }\n                ],\n                email: [\n                    { required: true, message: 'please input email', trigger: 'blur' },\n                    { min: 3, max: 50, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n                ],\n            },\n\n        }\n    },\n    created(){\n        this.getUserList();\n        this.getQuestionList();\n    },\n    methods:{\n        // 获取所有用户\n        async getUserList(){\n            const {data:res} = await this.$http.get(\"alluser\",{params:this.queryInfo});\n            this.userList = res.userList; // 用户列表数据封装\n            this.count = res.count; // 总用户数目\n        },\n        // 获取所有问题\n        async getQuestionList(){\n            const {data:res} = await this.$http.get(\"allquestion\",{params:this.queryInfo});\n            this.questionList = res.questionList; // 问题列表数据封装\n            this.count = res.count; // 总问题数目\n        },\n        // 最大数目\n        handleSizeChange(newSize){\n            this.queryInfo.pageSize = newSize;\n            this.getUserList(); // 获取每页的userlist\n        },\n        // pageNum 触发\n        handleCurrentChange(newPage){\n            this.queryInfo.pageNum = newPage;\n            this.getUserList();\n        },\n        // 修改用户状态\n        async userStateChange(userInfo){\n            var formData = new FormData();\n            formData.append('id',userInfo.id);\n            formData.append('state',userInfo.state);\n            const {data:res} = await this.$http.put('/userstate',formData);\n            if(res != \"success\"){\n                userInfo.state = !userInfo.state;\n                return this.$message.error(\"fail\");\n            }\n            this.$message.success(\"success\");\n        },\n    }\n}\n</script>\n<style lang=\"less\" scoped>\n.el-breadcrumb{\n    margin-bottom: 15px;\n    font-size:15px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}